"
I am an inline block generated by inline splitter, to parse inline text.

I am characterized by:
- start & end: locations of my opener & closer delimiters in initial string
- substring: concerned text (without delimiters so)
- kind: my type, symbol which must be the same than my relative delimiter type (#basic for normal text)
- children: array in case of nested inline blocks


"
Class {
	#name : #MicInlineBlock2,
	#superclass : #MicElement,
	#category : #'Microdown-InlineParser'
}

{ #category : #'as yet unclassified' }
MicInlineBlock2 class >> blockName [
	^ (self instanceSide name asString withoutPrefix: 'Mic') withoutSuffix: 'Block2'
]

{ #category : #testing }
MicInlineBlock2 class >> isEvaluated [
	^ true
]

{ #category : #visiting }
MicInlineBlock2 >> accept: dummy [
	"implemented in subclasses"
]

{ #category : #'as yet unclassified' }
MicInlineBlock2 >> blockName [
	^ self class blockName
]

{ #category : #visiting }
MicInlineBlock2 >> closeMe [
	"use for post parsing initialization"
]

{ #category : #private }
MicInlineBlock2 >> inlineParserClass [

	^ MicInlineParser2
]
